* Getting yourself organized with Orgmode

** Concept: Headlines - Outline mode

Every headline starts with one or more * 

Visibility of the headline hierarchy:
- Local visibility cycling with =<TAB>=
- Global visibility cycling with =S-<TAB>=

Increase or decrease level with =S-M RIGHT= or =S-M LEFT=

Move up/down within a level with =S-M UP= or =S-M DOWN=

Move a headline under another top level headline:
Cursor on the headline and then =C-c C-w=


** Concept: ToDo keywords
Default is TODO and DONE 

Cycling through them with =S RIGHT= or =S LEFT=

More keywords can be defined with a line =#+SEQ_TODO=:
- Items left of | are TODO items
- Items right of | are DONE items

Activate line with =C-c C-c=

Get a menu of all keywords: =C-c C-t=

** Concept: Schedule, deadline and agenda view
Scheduling is done with =C-c C-s=

Deadlines are defined with =C-c C-d=

Switch to agenda view with =C-a a=

Follow mode with =S-F=

Move forward with =f= or backward with =b=

** Concept: Repeating tasks

Some tasks occur frequently, so we should schedule them frequently. 

To schedule a repeating task you need to modify the timestamp: 
eg. < 2018-07-04 Mer [REPEAT]> 

The term [REPEAT] can be: 

- =+1w= Next occurence in one week. (w=week, d=day, m=month, y=year).
- =++1w= Next occurence on the same day of week, but definitely in the future.
- =.+4w= Next occurence 4 weeks after the task is marked as done.


** Concept: Checklists
Checklists provide a simple "checkoff" list.

Checklists start with 
- [ ] Text for checkitem

New checklist lines can be added with =C-c C-x M= (the capital letter 'M' not the Meta key)

You can see the completion of the checklist with =[/]= or =[%]= on the headline

Checkboxes are toggled with =C-c C-c=

** Concept: Tags 
Tags can be added to headlines and are often used as a way to mark GTD contexts.

Tags can be predefined with a line =#+TAGS: PHONE(o)......=
at the beginning of the file. 

To assign a tag to a headline use =C-c C-q=

If you have predefined tags with keys assigned, you see a menu, but you still can enter free tags by
pressing =<TAB>=. Finish definition with =Enter=.

** Concept: Agenda mode (adavanced)

In the agenda view: 

| Key   | Function                                |
|-------+-----------------------------------------|
| =A=   | Agenda for the current week or day      |
| =S-l= | Timeline for current buffer             |
| =t=   | List of all TODO entries                |
| =S-t= | Entries with a special TODO keyword     |
| =m=   | Match tags / properties / TODO keywords |
| =S-m= | Like before, but only TODO entries      |
| =s=   | Search for keywords                     |

** Concept: Customized agenda views

From the agenda view:

=S-c= Edit custom agenda views

** Concept: Drawers, Logging and quick notes

Drawers start with a line =:DRAWERNAME:= and end with the next line that says =:END:=. 
Everything between those lines is hidden when the drawer is closed. Open/close a drawer with =<TAB>=. 

Reserved drawer names are e.g. =:LOGBOOK:= or =:PROPERTIES:=

Customize =org-log-into-drawer= to LOGBOOK.

Take quick notes with =C-c C-z= 
Finish and store the note with =C-c C-c=

** Concept: Archiving

Finished tasks clutter up your org files, so it's time to move them out the way.

Define a global archive file with =#+ARCHIVE: filename.org::=

Archive an entry with =C-c C-x C-a=
Archive a subtree with =C-c C-x C-s= 

Search all subtrees under a headline and see which one can be archived with this keys
=C-u C-c C-x C-s=

** Concept: Automatic logging of status change

*Goal:* Get a logbook entry whenever a TODO keyword changes

=#+SEQ_TODO: TODO(t@/!)=
- =t= hotkey assigned to that todo keyword 
- =@= log a timestamp and a note when this is entered 
- =!= log a timestamp when you leave that keyword 

*Goal:* Log a =CLOSED= timestamp when something is done

Customize variable =org-log-done= 

*Goal:* Log a note with a timestamp everytime something is reschedule

Customize variable =org-log-reschedule= 

** Concept: Splitting your system up to several files

*Goal:* Instead of one file for all we want to have one for private things and one for work.

*Procedure:*

- Customize =org-agenda-files= so that both files are used to generate the agenda views.
- Customize refile function (fine tuning)
  - =org-refile-targets=
  - =org-refile-use-outline-path=
  - =org-refile-allow-creating-parent-nodes=
- Move entries with =C-c C-w=
- Copy enries with =C-c M-w=


** Concept: The first capture template(s)

*Goal:* Capturing tasks, ideas and whatever

*Procedure:*

- Define a capture key in your =.emacs= file:

#+BEGIN_SRC elisp
(global-set-key (kbd "<f6>") 'org-capture)
#+END_SRC

- Write template files (eg. tpl-todo.txt)
- Press your capture =f6= key and =S-c= to configure
  - Hotkey for capture
  - Destination
  - Format
  - Based on what template file or text
- Start capturing
 

** Concept: The =:PROPERTIES:= drawer

The =:PROPERTIES:= drawer stores task specific settings and used defined attributes.


Important: the =:PROPERTIES:= drawer must immediately follow the headline.

*Goal:* You don't want to create a log enry every time a task is done.

*Recipe:* Define a =:LOGGING:= property with value =nil=.

Matching properties in agenda views is possible too.


** Concept: Archiving to different files

*Goal:* You want to archive your read books in an extra file and not inside the global archive.

*Recipe:* Define an =:ARCHIVE:= property with the target name eg. =:ARCHIVE:= track-books::* Read books
Definition is done on the top hierarchy level and then inherited to its children.

** Concept: Ordered tasks

*Goal:* Tasks must be completed one after the other.

*Recipe:* Define the =:ORDERED:= property with value =t=.

Toggle the =:ORDERED:= property with =C-c C-x o=

Customizing variables:
#+BEGIN_SRC elisp
'(org-enforce-todo-dependencies t)
'(org-track-ordered-property-with-tag t)
#+END_SRC


More customization:
#+BEGIN_SRC elisp
org-agenda-dim-blocked-tasks
org-enforce-todo-checkbox-dependencies
#+END_SRC

* Credits

Most of these notes comes from [[https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE][Rainer KÃ¶nig video serie on OrgMode tutorial]].
